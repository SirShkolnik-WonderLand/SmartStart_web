# Multi-stage build for SMB Cyber Health Check
FROM node:18-alpine AS frontend-builder

# Set working directory
WORKDIR /app

# Copy package files from Quiestioneer directory
COPY smartstart-platform/Quiestioneer/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code from Quiestioneer directory
COPY smartstart-platform/Quiestioneer/src/ ./src/
COPY smartstart-platform/Quiestioneer/public/ ./public/
COPY smartstart-platform/Quiestioneer/index.html ./
COPY smartstart-platform/Quiestioneer/vite.config.ts ./
COPY smartstart-platform/Quiestioneer/tsconfig*.json ./

# Build frontend
RUN npm run build

# Python server stage
FROM python:3.11-slim

# Install system dependencies for WeasyPrint
RUN apt-get update && apt-get install -y \
    build-essential \
    python3-dev \
    libffi-dev \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libgdk-pixbuf-2.0-0 \
    libx11-6 \
    libxext6 \
    libxrender1 \
    libxtst6 \
    libxi6 \
    shared-mime-info \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY smartstart-platform/Quiestioneer/server/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy server code
COPY smartstart-platform/Quiestioneer/server/ ./server/

# Copy built frontend from previous stage
COPY --from=frontend-builder /app/dist ./dist

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app
RUN chown -R app:app /app
USER app

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["python", "server/app.py"]
