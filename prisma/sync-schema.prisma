// SmartStart Data Synchronization Schema
// Tracks data synchronization across all systems

model SyncLog {
  id            String   @id @default(cuid())
  entityType    String   // user, venture, team, buzToken, etc.
  entityId      String   // ID of the entity being synced
  lastSyncedAt  DateTime @default(now())
  syncCount     Int      @default(0)
  lastError     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([entityType, entityId], name: "entityType_entityId")
  @@index([entityType])
  @@index([lastSyncedAt])
  @@map("sync_logs")
}

model SyncConflict {
  id            String   @id @default(cuid())
  entityType    String
  entityId      String
  localData     Json
  remoteData    Json
  resolution    String?  // timestamp, version, manual
  resolvedAt    DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([entityType, entityId])
  @@index([createdAt])
  @@map("sync_conflicts")
}

model SyncQueue {
  id            String   @id @default(cuid())
  entityType    String
  entityId      String
  eventType     String
  eventData     Json
  priority      Int      @default(0)
  retryCount    Int      @default(0)
  maxRetries    Int      @default(3)
  status        String   @default("pending") // pending, processing, completed, failed
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  processedAt   DateTime?

  @@index([entityType, status])
  @@index([priority, createdAt])
  @@map("sync_queue")
}

model DataVersion {
  id            String   @id @default(cuid())
  entityType    String
  entityId      String
  version       String   // MD5 hash of data
  data          Json
  createdAt     DateTime @default(now())

  @@unique([entityType, entityId, version])
  @@index([entityType, entityId])
  @@map("data_versions")
}
