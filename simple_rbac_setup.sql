-- Simple RBAC Setup - Step by Step

-- Create Role table
CREATE TABLE IF NOT EXISTS "Role" (
    id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    level INTEGER NOT NULL DEFAULT 0,
    "createdAt" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create Permission table
CREATE TABLE IF NOT EXISTS "Permission" (
    id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    resource VARCHAR(50) NOT NULL,
    action VARCHAR(50) NOT NULL,
    "createdAt" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create RolePermission junction table
CREATE TABLE IF NOT EXISTS "RolePermission" (
    id VARCHAR(50) PRIMARY KEY,
    "roleId" VARCHAR(50) NOT NULL REFERENCES "Role"(id) ON DELETE CASCADE,
    "permissionId" VARCHAR(50) NOT NULL REFERENCES "Permission"(id) ON DELETE CASCADE,
    "createdAt" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE("roleId", "permissionId")
);

-- Create UserRole junction table
CREATE TABLE IF NOT EXISTS "UserRole" (
    id VARCHAR(50) PRIMARY KEY,
    "userId" VARCHAR(50) NOT NULL REFERENCES "User"(id) ON DELETE CASCADE,
    "roleId" VARCHAR(50) NOT NULL REFERENCES "Role"(id) ON DELETE CASCADE,
    "assignedAt" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    "assignedBy" VARCHAR(50) REFERENCES "User"(id),
    UNIQUE("userId", "roleId")
);
