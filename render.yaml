# SmartStart Platform - Complete AliceSolutions Hub Architecture
# Full-stack platform with all services for future scalability

databases:
  - name: smartstart-db
    plan: free
    ipAllowList: []

services:
  # API Server - Handles all business logic, database operations, external integrations
  - name: smartstart-api
    type: web
    runtime: node
    plan: free
    buildCommand: npm install && npx prisma generate
    startCommand: npm run start:api
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: smartstart-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: NEXTAUTH_SECRET
        generateValue: true
      - key: API_PORT
        value: "3001"
      - key: NODE_ENV
        value: production
      - key: STRIPE_SECRET_KEY
        value: "sk_test_..." # Add your Stripe test key
      - key: GITHUB_CLIENT_ID
        value: "" # Add your GitHub OAuth app ID
      - key: GITHUB_CLIENT_SECRET
        value: "" # Add your GitHub OAuth secret
      - key: M365_CLIENT_ID
        value: "" # Add your Microsoft 365 app ID
      - key: M365_CLIENT_SECRET
        value: "" # Add your Microsoft 365 secret
      - key: SMTP_HOST
        value: "smtp.gmail.com" # Email service
      - key: SMTP_PORT
        value: "587"
      - key: SMTP_USER
        value: "" # Add your email
      - key: SMTP_PASS
        value: "" # Add your email password
      - key: REDIS_URL
        value: "" # For caching and sessions
      - key: AWS_ACCESS_KEY_ID
        value: "" # For S3 file storage
      - key: AWS_SECRET_ACCESS_KEY
        value: "" # For S3 file storage
      - key: AWS_S3_BUCKET
        value: "smartstart-files" # S3 bucket for file storage
      - key: AWS_REGION
        value: "us-east-1"
    healthCheckPath: /api/health
    autoDeploy: true

  # Background Worker - Handles quarterly rebalancing, dunning, provisioning
  - name: smartstart-worker
    type: worker
    runtime: node
    plan: free
    buildCommand: npm install && npx prisma generate
    startCommand: npm run start:worker
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: smartstart-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: NODE_ENV
        value: production
      - key: STRIPE_SECRET_KEY
        value: "sk_test_..." # Add your Stripe test key
      - key: SMTP_HOST
        value: "smtp.gmail.com"
      - key: SMTP_PORT
        value: "587"
      - key: SMTP_USER
        value: "" # Add your email
      - key: SMTP_PASS
        value: "" # Add your email password
      - key: REDIS_URL
        value: "" # For job queues
      - key: AWS_ACCESS_KEY_ID
        value: "" # For S3 file storage
      - key: AWS_SECRET_ACCESS_KEY
        value: "" # For S3 file storage
      - key: AWS_S3_BUCKET
        value: "smartstart-files"
      - key: AWS_REGION
        value: "us-east-1"
    autoDeploy: true

  # Web Service - Next.js frontend application
  - name: smartstart-platform
    type: web
    runtime: node
    plan: free
    buildCommand: npm install && npx prisma generate && npm run build
    startCommand: npm start
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: smartstart-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: NEXTAUTH_SECRET
        generateValue: true
      - key: NEXTAUTH_URL
        value: https://smartstart-platform.onrender.com
      - key: NEXT_PUBLIC_API_URL
        value: https://smartstart-api.onrender.com
      - key: NODE_ENV
        value: production
      - key: STRIPE_PUBLISHABLE_KEY
        value: "pk_test_..." # Add your Stripe publishable key
      - key: NEXT_PUBLIC_S3_BUCKET
        value: "smartstart-files"
      - key: NEXT_PUBLIC_AWS_REGION
        value: "us-east-1"
    healthCheckPath: /
    autoDeploy: true

  # File Storage Service - Handles document uploads, contracts, KYC docs
  - name: smartstart-storage
    type: web
    runtime: node
    plan: free
    buildCommand: npm install
    startCommand: npm run start:storage
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: smartstart-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: NODE_ENV
        value: production
      - key: AWS_ACCESS_KEY_ID
        value: "" # Add your AWS credentials
      - key: AWS_SECRET_ACCESS_KEY
        value: "" # Add your AWS credentials
      - key: AWS_S3_BUCKET
        value: "smartstart-files"
      - key: AWS_REGION
        value: "us-east-1"
      - key: STORAGE_PORT
        value: "3002"
    healthCheckPath: /health
    autoDeploy: true

  # Monitoring Service - Health checks, metrics, logging
  - name: smartstart-monitor
    type: web
    runtime: node
    plan: free
    buildCommand: npm install
    startCommand: npm run start:monitor
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: smartstart-db
          property: connectionString
      - key: NODE_ENV
        value: production
      - key: MONITOR_PORT
        value: "3003"
      - key: API_URL
        value: https://smartstart-api.onrender.com
      - key: WEB_URL
        value: https://smartstart-platform.onrender.com
      - key: WORKER_URL
        value: https://smartstart-worker.onrender.com
      - key: STORAGE_URL
        value: https://smartstart-storage.onrender.com
    healthCheckPath: /health
    autoDeploy: true
