got it — here’s a **copy-pasteable plain-text spec** you can drop into your repo as
`/documentation/rules_venture_start.txt` (same style as your previous rules.txt).
It defines **screens/CLI prompts, validations, documents to issue/sign, storage, security, comms, provisioning, approvals, events, and metrics** for starting a new **Venture / Project / Idea** inside the Hub.

---

# RULES\_VENTURE\_START.TXT — Venture Start Wizard (VSW)

## 0) PURPOSE

Standardize how a venture/project/idea is created: collect the right facts, gate with the right legal/security, provision the stack, set comms, and produce an auditable record.

## 1) PREREQUISITES (hard gates)

* Account verified + MFA on.
* **PTSA** seat active (CAD \$100/mo).
* Accepted: **PPA**, **E-Signature Consent**, **Privacy Notice**, **NDA (Internal)**, **STHCA**.
* Idea owner identified (self or third party). If third party: **Idea Submission & Evaluation Agreement** must be signed before any non-public review.

## 2) SCREENS / CLI WIZARD (in order)

### Screen 1 — Venture Basics

Fields:

* `venture_name` (2–80 chars)
* `slug` (kebab, unique: `^[a-z0-9-]{3,32}$`)
* `description` (min 30 chars)
* `industry_tags` (up to 5)
* `stage` ∈ {Idea, Discovery, Prototype, Beta, Launch}
* `owner_entity_legal_name` (non-empty)
* `project_lead_user_id` (UUID v4)
* `co_owners[]` (0..3 user IDs)
  Validations:
* Unique `slug`; owner has PTSA seat; Project Lead has PTSA seat.

### Screen 2 — Data & Security Tier

Fields:

* `data_tier` ∈ {T0 Public, T1 Confidential, T2 Restricted, T3 HighlyRestricted}
* `pii_present` (Y/N)  `phi_present` (Y/N)
* `residency` default `CA`; optional extra regions (comma) → Legal approval required
* `designated_systems` (select from org catalogs): repos, docs/vault, tickets, CI/CD, secrets manager, DB/storage, monitoring
* `ai_llm_allowed` (Y/N per approved provider only)
  Validations:
* If `phi_present=Y` → PHIPA schedule required.
* If `data_tier ∈ {T2,T3}` → Security approval required.
* If extra residency → Legal approval required.

### Screen 3 — Team & Roles

Fields per member:

* `user_id` (UUID)  `role`  `access_expiry` (30–90 days)
* `requires_repo_write` (Y/N)  `requires_prod_access` (Y/N)
  Validations:
* All users must have PTSA seat + device compliance (Intune/Defender = Y).

### Screen 4 — Tooling & Hosting

Defaults ON (from STHCA):

* M365 email/domain, Entra SSO+MFA, Intune + Defender
* GitHub Org + branch protection + required reviews
* Approved CI/CD + Secrets Manager
* Default hosting on **Render.com** (Starter)
* Backups + logs/metrics/alerts + DLP/watermarks
  Optional Upgrades (opens **PUOHA** flow):
* Render Pro/Enterprise, DB tiers, GH Advanced Security, scanners, monitoring, etc.

### Screen 5 — Legal Pack (Project-level)

Auto-issue (as needed, based on inputs):

* **Per-Project NDA Addendum (Security-Tiered)** — everyone who gets access signs.
* **Participant Collaboration Agreement (PCA)** — if multiple peer contributors.
* **Joint Development Agreement (JDA)** — if co-creating core IP across parties.
* **Data Processing/Sharing Addendum (DPA/DSA)** — if personal data flows between orgs.
* **Idea Submission & Evaluation Agreement** — if idea owner ≠ AliceSolutions/venture entity.
* **IP Assignment/License** — if assigning Foreground IP to Venture/NewCo.

### Screen 6 — Provisioning Plan

Fields:

* `create_repos[]` (names, visibility=private)
* `envs` (dev/test/prod flags), `render_region`
* `secrets_namespace` (path)
* `dbs[]` (type/tier/HA)
* `backups_scope` (mail/SharePoint/OneDrive/repos/DBs)
* `observability` (APM/logs/metrics/traces)
* `dl_group_email` (e.g., `{slug}@<domain>`)
* `teams_channel` (create/Y-N)  `meeting_cadence` (weekly/biweekly)
  Validations:
* Names unique; backups configured for all stateful components.

### Screen 7 — Review & Sign

Show summary + document hashes. Collect signatures (Project Owner, AliceSolutions; add Security/Legal if flagged). On success → emit provisioning jobs.

---

## 3) VALIDATION (global)

* Emails: `^[^\s@]+@[^\s@]+\.[^\s@]+$`
* Dates ISO `YYYY-MM-DD` and `>= today`.
* All signers must belong to the tenant and have verified email + MFA.
* No external repos, emails, or storage outside Designated Systems.

## 4) DOCUMENTS (auto-issued, sign & store)

* Render with variables, canonicalize, **SHA-256** hash, collect e-sign evidence (name/title/email/IP/UA/timestamp/OTP-last4/hash).
* Store:

  * TXT/PDF → `/server/Contracts/signed/{TYPE}_{ventureId}_{yyyyMMdd}_{docId}.txt|pdf`
  * Payload JSON → `/server/Contracts/payloads/{TYPE}_{docId}.json`
* Events: `document.issued` → each; `document.fully_executed` → all signed.

## 5) PROVISIONING (after signatures)

Create:

* **M365**: group `{slug}@domain`, Team/Channel, shared calendar.
* **GitHub**: org repos per plan; branch protection; required reviews; CODEOWNERS.
* **CI/CD**: pipelines; environment gates; secrets from **Secrets Manager** only.
* **Render.com**: services per plan; service account; region; autoscale per PUOHA.
* **DB/Storage**: create with HA/backup policies; retention windows set.
* **Backups**: enable M365 (mail/SharePoint/OneDrive/Teams), repos, DBs.
* **Observability**: logs/metrics/APM/traces with alerts to group + on-call.
* **Access**: RBAC groups; expiries (T1: ≤90d, T2: ≤60d, T3: ≤30d) with auto-review.
* **DLP**: enforce watermark/export controls; disable printing (T2/T3).
  Emit jobs: `provision.repo.created`, `provision.env.ready`, `provision.access.granted`.

## 6) SECURITY RULES (enforced)

* MFA mandatory; **Intune-enrolled** + **Defender** active; CA blocks non-compliant devices.
* **Designated Systems only**; no personal email forwarding; no external LLMs unless approved.
* Secrets in secrets manager; rotate: T1=90d, T2=30d, T3=14–30d or on signal.
* Incident reporting within **24h** via security channel; full cooperation.
* For PHI: PHIPA controls, extra auditing, minimum-necessary access.

## 7) COMMUNICATION POLICY

* Allowed: M365 mail, Teams/Channels/Meetings; ticketing in the approved tracker.
* Forbidden: personal email, unapproved messengers, unrecorded calls for decisions.
* Cadence: weekly standup; monthly status review; security review each access review window.
* CASL compliance for any outbound commercial messages; unsubscribe respected.

## 8) SAVED OBJECTS (DB schema keys)

* `venture` { id, name, slug, owner\_entity, project\_lead, stage, created\_at }
* `venture_security` { venture\_id, data\_tier, pii, phi, residency, designated\_systems }
* `venture_team` \[{ venture\_id, user\_id, role, scopes, expiry }]
* `venture_legal` \[{ venture\_id, doc\_type, doc\_id, status, hash, signed\_by\[] }]
* `venture_tooling` { venture\_id, repos\[], envs\[], dbs\[], backups, observability }
* `venture_comms` { venture\_id, dl\_email, teams\_channel, meeting\_cadence }
* `venture_events` (append-only audit log)

## 9) APPROVALS

* **Security** required if: T2/T3, PHI, AI/LLM exceptions, tooling exceptions.
* **Legal** required if: extra residency, new sub-processors, unusual IP model.
* **Finance** required if: upgrades add recurring costs (trigger **PUOHA**).

## 10) FAILURE & ROLLBACK

* If any doc not fully executed → block provisioning.
* If provisioning partial fail → rollback created cloud assets; keep audit trail; raise `provision.failed`.
* If device/compliance check fails → hold access; send remediation steps.

## 11) OFFBOARDING / CLOSURE

* Revoke access; rotate secrets; archive repos; export data to owner per DPA; delete local copies with **Exit Attestation**.
* Mark venture status: **Closed**; retain logs per policy.

## 12) METRICS (emit to analytics)

* Time to create venture (start→fully executed).
* Doc SLA: average time to sign per doc type.
* Provisioning SLA: issue→ready.
* Access review findings; DLP events per 1k actions.
* Comms cadence adherence; PR review latency.

---

## APPENDIX A — CLI PROMPTS (compact list)

1. Basics: name, slug, description, industry\_tags, stage, owner\_entity, project\_lead, co\_owners\[]
2. Security: data\_tier, pii, phi, residency, designated\_systems\[], ai\_llm\_allowed
3. Team: members\[] { user\_id, role, expiry, repo\_write(Y/N), prod\_access(Y/N) }
4. Tooling: confirm baseline (all Y), choose upgrades? (if yes → run PUOHA)
5. Legal: auto-issue set (checklist shows which apply); confirm to proceed
6. Provisioning plan: repos\[], envs, region, secrets\_namespace, dbs\[], backups\_scope, observability, dl\_email, teams\_channel(Y/N), meeting\_cadence
7. Review & Sign: show summary + **DOC HASHES**; collect e-signs

---

## APPENDIX B — SUMMARY TEMPLATE (printed before signature)

```
Venture Start — Summary
Name/Slug: {venture_name} / {slug}
Owner: {owner_entity_legal_name}  | Lead: {project_lead_email}
Stage: {stage}  | Data Tier: {data_tier}  | Residency: {residency}
Designated Systems: {designated_systems_csv}
Team (count): {team_count}  | Repo write: {repo_write_count}  | Prod access: {prod_count}
Docs to sign: {doc_list_csv}
Provisioning: repos={repos_count} envs={envs_csv} DBs={dbs_count} backups={backups_scope}
Comms: DL={dl_group_email} Teams={teams_channel} cadence={meeting_cadence}
Hashes: NDA_ADD={hash_nda_add} PCA={hash_pca} JDA={hash_jda} DPA/DSA={hash_dpa} Others={hash_others}
```

---

## PERMISSIONS

* Who can start: **Founder/ProjectOwner/Org.Owner**.
* Who can approve: **Security.Admin, Legal.Admin, Finance.Admin** as triggered.
* Read access: Owner, Org.Owner, Security.Admin, Legal.Admin, Finance.Admin.

---

*End of rules\_venture\_start.txt*
